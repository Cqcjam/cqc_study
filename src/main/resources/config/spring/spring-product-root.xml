<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

    <!-- 导入属性配置文件 -->
    <context:property-placeholder
            location="classpath:application.properties"
            ignore-unresolvable="true"/>

    <!-- 添加使用注解依赖的配置 -->
    <context:annotation-config />

    <!-- 注解扫描的包 包括sub package子包 -->
    <context:component-scan base-package="com.cqc.unif.product.*,com.cqc.unif.platinumcard.common.utils">
        <!--将Controller的注解排除掉 -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
    
    <bean id="productDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${jdbc.product.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.product.url}" />
        <property name="user" value="${jdbc.product.username}" />
        <property name="password" value="${jdbc.product.password}" />
        <property name="minPoolSize" value="${jdbc.product.min}" />
        <property name="maxPoolSize" value="${jdbc.product.max}" />
        <property name="maxIdleTime" value="${jdbc.product.IdleTime}" />
        <property name="idleConnectionTestPeriod" value="${jdbc.product.idleConnectionTestPeriod}" />
    </bean>

    <!-- mybatis 配置 -->
    <bean id="productSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="productDataSource" />
        <property name="configLocation" value="classpath:config/mybatis/mybatis-config.xml" />
        <!-- 当Mapper文件跟对应的Mapper接口处于同一位置的时候可以不用指定该属性的值: -->
        <property name="mapperLocations"
                  value="classpath:com/cqc/unif/product/persistence/*.xml" />
    </bean>
    
    <!-- 事务配置begin -->
    <!-- 开启事务注解驱动 -->
    <bean id="txManagerProduct"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="productDataSource" />
    </bean>
    <tx:annotation-driven transaction-manager="txManagerProduct" />
    <tx:advice id="txAdviceProduct" transaction-manager="txManagerProduct">
        <tx:attributes>
            <tx:method name="add*" rollback-for="Exception" />
            <tx:method name="save*" rollback-for="Exception" />
            <tx:method name="update*" rollback-for="Exception" />
            <tx:method name="delete*" rollback-for="Exception" />
            <tx:method name="merage*" rollback-for="Exception" />
            <tx:method name="beginRun" rollback-for="Exception" />
            <tx:method name="acquire*" rollback-for="Exception" />
            <tx:method name="get*" read-only="true" />
            <tx:method name="set*" read-only="true" />
            <tx:method name="query*" read-only="true" />
            <tx:method name="find*" read-only="true" />
            <tx:method name="load*" read-only="true" />
            <tx:method name="count*" read-only="true" />
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="serviceOperationProduct" expression="execution(* com.cqc.unif.product.service.impl..*.*(..))" />
        <aop:advisor advice-ref="txAdviceProduct" pointcut-ref="serviceOperationProduct" />
    </aop:config>
    <!-- 事务配置end -->

    <!-- Mapper接口扫描 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cqc.unif.product.persistence" />
        <property name="sqlSessionFactoryBeanName" value="productSqlSessionFactory" />
    </bean>
    
    <bean class="com.cqc.unif.product.common.utils.RedisTemplate">
    <constructor-arg name="host" value="${kill.redis.host}"></constructor-arg>
    <constructor-arg name="namespace" value="${kill.redis.namespace}"></constructor-arg>
    <constructor-arg name="password" value="${kill.redis.password}"></constructor-arg>
    <constructor-arg name="port" value="${kill.redis.port}"></constructor-arg>
    <constructor-arg name="db" value="${kill.redis.db}"></constructor-arg>
    </bean>

    <!-- 线程池配置 -->
    <bean id="threadPool" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 核心线程数  -->
        <property name="corePoolSize" value="5000" />
        <!-- 最大线程数 -->
        <property name="maxPoolSize" value="10000" />
        <!-- 队列最大长度 -->
        <property name="queueCapacity" value="20000" />
        <!-- 线程池维护线程所允许的空闲时间 -->
        <property name="keepAliveSeconds" value="60" />
        <!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
        </property>
    </bean>
</beans>
