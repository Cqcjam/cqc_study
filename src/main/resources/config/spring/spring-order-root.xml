<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

    <!-- 导入属性配置文件 -->
    <context:property-placeholder
            location="classpath:application.properties"
            ignore-unresolvable="true"/>

    <!-- 添加使用注解依赖的配置 -->
    <context:annotation-config />

    <!-- 注解扫描的包 包括sub package子包 -->
    <context:component-scan base-package="com.cqc.unif.order.*">
        <!--将Controller的注解排除掉 -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
    
    <bean id="orderDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${jdbc.order.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.order.url}" />
        <property name="user" value="${jdbc.order.username}" />
        <property name="password" value="${jdbc.order.password}" />
        <property name="minPoolSize" value="${jdbc.order.min}" />
        <property name="maxPoolSize" value="${jdbc.order.max}" />
        <property name="maxIdleTime" value="${jdbc.order.IdleTime}" />
        <property name="idleConnectionTestPeriod" value="${jdbc.order.idleConnectionTestPeriod}" />
    </bean>

    <!-- mybatis 配置 -->
    <bean id="orderSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="orderDataSource" />
        <property name="configLocation" value="classpath:config/mybatis/mybatis-config.xml" />
        <!-- 当Mapper文件跟对应的Mapper接口处于同一位置的时候可以不用指定该属性的值: -->
        <property name="mapperLocations"
                  value="classpath:com/cqc/unif/order/persistence/*.xml" />
    </bean>
    
    <!-- 事务配置begin -->
    <!-- 开启事务注解驱动 -->
    <bean id="txManagerOrder"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="orderDataSource" />
    </bean>
    <tx:annotation-driven transaction-manager="txManagerOrder" />
    <tx:advice id="txAdviceOrder" transaction-manager="txManagerOrder">
        <tx:attributes>
            <tx:method name="add*" rollback-for="Exception" />
            <tx:method name="save*" rollback-for="Exception" />
            <tx:method name="update*" rollback-for="Exception" />
            <tx:method name="delete*" rollback-for="Exception" />
            <tx:method name="merage*" rollback-for="Exception" />
            <tx:method name="get*" read-only="true" />
            <tx:method name="set*" read-only="true" />
            <tx:method name="query*" read-only="true" />
            <tx:method name="find*" read-only="true" />
            <tx:method name="load*" read-only="true" />
            <tx:method name="count*" read-only="true" />
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="serviceOperationOrder" expression="execution(* com.cqc.unif.order.service.impl..*.*(..))" />
        <aop:advisor advice-ref="txAdviceOrder" pointcut-ref="serviceOperationOrder" />
    </aop:config>
    <!-- 事务配置end -->

    <!-- Mapper接口扫描 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cqc.unif.order.persistence" />
        <property name="sqlSessionFactoryBeanName" value="orderSqlSessionFactory" />
    </bean>

</beans>